[versions]
agp = "8.4.2"
kotlin = "2.0.0"
kotlinxSerialization = "1.7.0"
coreKtx = "1.12.0"
fragmentKtx = "1.7.1"
espressoCore = "3.5.1"
appcompat = "1.6.1"
material = "1.11.0"
constraintlayout = "2.1.4"
lifecycleLivedataKtx = "2.8.1"
androidxLifecycle = "2.8.1"
navigationFragmentKtx = "2.7.7"
androidxFoundation = "1.6.8"
androidxComposeUi = "1.6.8"
androidxUiToolingPreviewAndroid = "1.6.8"
androidxUiTooling = "1.6.8"
navigationUiKtx = "2.7.7"
material3Android = "1.2.1"
lifecycleRuntimeComposeAndroid = "2.8.2"
coil = "2.6.0"

retrofit = "2.11.0"
retrofitConverter = "2.11.0"
okhttp = "4.12.0"
coroutines = "1.9.0-RC"
coroutinesAndroid = "1.9.0-RC"

# buildSrc dependencies
jetbrainsKotlinGradlePlugin = "2.0.0"
squareJavaPoet = "1.13.0"

junit = "4.13.2"
junitVersion = "1.1.5"

dagger = "2.51.1"
daggerHilt = "2.51.1"


[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-fragment-ktx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragmentKtx" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycleLivedataKtx" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" }
androidx-ui-android = { group = "androidx.compose.ui", name = "ui-android", version.ref = "androidxComposeUi" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "androidxFoundation" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "androidxUiTooling" }
androidx-ui-tooling-preview-android = { group = "androidx.compose.ui", name = "ui-tooling-preview-android", version.ref = "androidxUiToolingPreviewAndroid" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
androidx-lifecycle-runtime-compose-android = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose-android", version.ref = "lifecycleRuntimeComposeAndroid" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
coil = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
junit = { group = "junit", name = "junit", version.ref = "junit" }

# dagger is required for hilt used in multi-modules setup https://developer.android.com/training/dependency-injection/hilt-multi-module
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "dagger" }
dagger-compiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger" }
dagger-hilt = { group = "com.google.dagger", name = "hilt-android", version.ref = "daggerHilt" }
dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "daggerHilt" }

# network
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter = { group = "com.squareup.retrofit2", name = "converter-kotlinx-serialization", version.ref = "retrofitConverter" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }

# coroutines
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutinesAndroid" }

# buildSrc dependencies
android-tools-build-gradle = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
jetbrains-kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "jetbrainsKotlinGradlePlugin" }
square-javapoet = { group = "com.squareup", name = "javapoet", version.ref = "squareJavaPoet" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin = { id = "kotlin", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

kotlinKapt = { id = "kotlin-kapt", version.ref = "kotlin" }
daggerHilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }

# custom precompiled script plugins from buildSrc
jacocoReports = { id = "jacoco-reports", version = "undefined" }
